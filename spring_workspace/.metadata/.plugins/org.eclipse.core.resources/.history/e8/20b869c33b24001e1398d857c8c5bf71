package com.care.ajaxBasic;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.io.ClassPathResource;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.care.ajaxBasic.AjaxService;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;


@Controller
public class AjaxController {
	
	@Autowired private AjaxService Servicece;
	@Autowired private HttpSession session;

	@GetMapping("ex1")
	public void ex1Get() {
	}
	@PostMapping("ex1a")
	public void ex1PostA() {
		System.out.println("ajax 요청 도착");
	}
	
	@PostMapping("ex1b")
	public void ex1PostB(@RequestBody String ajaxParam) {
		System.out.println("ajax 요청 도착 : " + ajaxParam);
	}
	
	@ResponseBody
	@PostMapping(value="ex1c", produces = "text/plain; charset=UTF-8")
	public String ex1PostC(@RequestBody String ajaxParam) {
		System.out.println("ajax 요청 도착 : " + ajaxParam);
		return "응답 데이터";
	}
	
	@GetMapping("ex2")
	public void ex2Get() {}
	
	@Autowired private AjaxService service;
	
	@ResponseBody
	@PostMapping(value="ex2", produces = "text/plain; charset=UTF-8")
	public String ex2Post(@RequestBody(required = false) String id) {
		//System.out.println("입력한 아이디 : " + id);
		return service.exists(id);
	}
	
	@GetMapping("ex3")
	public void ex3Get() {
		
	}
	
	
	//데이터가 많아지면 map으로 그 다음은 dto를 사용한다
//	@PostMapping("ex3")
//	public void ex3Post(@RequestBody Map<String, String> reqData) {
//		System.out.println("reqData : " + reqData.get("id"));
//		System.out.println("reqData : " + reqData.get("pw"));
//	}
	
	/* 비 동식 전송방식 현재 웹브라우저 코드 실행 사용자 데이터 입력 이벤트가 실행 서버로 전송하는데 */
	
	@ResponseBody
	@PostMapping("ex3")
	//  문자열로 받는다
	public Map<String, String> ex3Post(@RequestBody AjaxDTO reqData) { 
		// json 방식으로 전송할수도있다
		//xml 자신들의 namespace가 필요하다
		System.out.println("reqData : " + reqData.getId());
		System.out.println("reqData : " + reqData.getPw());
		
		Map<String, String> resData = new HashMap<String, String>();
		//키설정
		resData.put("idPrint", "아이디는 서버에 저장되어 있어요");
		resData.put("pwPrint", "아이디/비밀번호를 확인 후 다시 입력하세요.");
		return resData;
	}
	@GetMapping("ex4")
	public void ex4Get() {
		
	}
	@ResponseBody
	//데이터만 전달할수있다 
	@PostMapping(value="ex4",produces = "application/json; charset=UTF-8")
	//json 파일을 한글로도 읽을수있게 만들기
	public String ex4Post() {
		ClassPathResource cpr = new ClassPathResource("jsonExam.json"); //경로를 얻을수있다
		String result =" ";
		try {
			File file = cpr.getFile();
			FileReader fr = new FileReader(file);//파일읽수있다
			BufferedReader br = new BufferedReader(fr); //생성자에 넣을것 파일 (파일읽는 속도가 빠르다)
			while(true) {
				String tmp = br.readLine(); //문자열을 반환 (한줄씩 읽는다)
				if(tmp == null)
					break;
				result += tmp;
				
			}
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return result;
	}
	@GetMapping("ex5")
	public void ex5Get() {
		
	}
	@ResponseBody
	@PostMapping(value="ex5",produces = "application/json; charset=UTF-8")
	public List<AjaxVO> ex5Post() {
		ClassPathResource cpr = new ClassPathResource("jsonExam2.json");
		List<AjaxVO> lists = null;
		try {
			File file = cpr.getFile();
			//Json array List 변환
			ObjectMapper mapper = new ObjectMapper();

			lists = mapper.readValue(file, new TypeReference<List<AjaxVO>>() {});
			
			System.out.println( (new TypeReference<List<AjaxVO>>() {}).getType() );
			//java.util.List<com.care.ajaxBasic.AjaxVO>
			//TypeReference를 사용하는 이유 : 제너릭을 사용하는 클래스의 자료형을 얻고 싶을 때
			
			
		} catch (IOException e) {
			
			e.printStackTrace();
		}
		return lists;
	}
	

	
	@ResponseBody
	@GetMapping(value="jsonInsert",produces = "application/json; charset=UTF-8")
	public String jsonInsert() {
		
		String msg = service.jsonInsert();
		return msg;
		
	}
	
	@GetMapping("ex6")
	public void ex6Get() {
		
	}
	@ResponseBody
	@PostMapping(value="ex6",produces = "application/json; charset=UTF-8")
	public List<AjaxVO> ex6Post() {
		
		return service.ex6();
	}
	
	@GetMapping("quiz")
	public void quizGet() {}
	
	@ResponseBody
	@PostMapping(value="quiz", produces = "application/json; charset=UTF-8")
	public List<AjaxVO> quizPost(@RequestBody(required = false)String title) {
		/*
		 * 첫 화면 또는 input에 아무것도 입력이 안되어 있으면 모든 데이터 출력하기.
		 * input 에 입력한 글자를 포함한 데이터가 있으면 모두 출력하기.
		 */
		
		if(title.isEmpty() || title ==null){
			
		}
		else {
			System.out.println("quizPost() 호출함."+title);
			return service.search(title);
		}
		return service.search(title);
		
		
	}
		
}




















